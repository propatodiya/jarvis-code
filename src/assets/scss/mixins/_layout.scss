// Generates the `.in` style for the generic backdrop used components such as the drawer in overlay mode
@mixin bmd-layout-backdrop-in() {
  >.bmd-layout-backdrop {
    .in {
      visibility: visible;
      background-color: rgba(0, 0, 0, 0.5);
    }

    @supports (pointer-events: auto) {
      &.in {
        pointer-events: auto;
        opacity: 1;
      }
    }
  }
}

@mixin hover-focus-active {

  // add the .active to the whole mix of hover-focus-active
  &.active {
    @content;
  }

  @include hover-focus-active() {
    @content;
  }
}

@mixin transform-translate-y($value) {
  -webkit-transform: translate3d(0, $value, 0);
  -moz-transform: translate3d(0, $value, 0);
  -o-transform: translate3d(0, $value, 0);
  -ms-transform: translate3d(0, $value, 0);
  transform: translate3d(0, $value, 0);
}

@mixin navbar-colors($color, $link-color) {
  color: $link-color;
  background-color: $color !important;
  @include shadow-navbar-color($color);

  .dropdown-item:hover,
  .dropdown-item:focus {
    @include shadow-small-color($color);
    background-color: $color;
    color: $link-color;
  }

  .navbar-toggler {
    .navbar-toggler-icon {
      background-color: $link-color;
    }
  }
}

@mixin bmd-tabs-color($color, $active-color, $active-border, $disabled-link-color, $disabled-link-hover-color) {
  .nav-link {
    color: $color;

    &.active {
      color: $active-color;
      border-color: $active-border;

      @include hover-focus {
        border-color: $active-border;
      }
    }

    // Disabled state lightens text and removes hover/tab effects
    &.disabled {
      color: $disabled-link-color;

      @include plain-hover-focus {
        color: $disabled-link-hover-color;
      }
    }
  }
}

@mixin set-wizard-color($color) {
  @if $color == $brand-primary  {
    .moving-tab {
      @include linear-gradient-default-deg(140deg);
    }
  }
  .moving-tab {
    background-color: $color;
    @include box-shadow-default();
  }

  .picture {
    &:hover {
      border-color: $color;
    }
  }

  .choice {

    &:hover,
    &.active {
      .icon {
        border-color: $color;
        color: $color;
      }
    }
  }


  .checkbox input[type=checkbox]:checked+.checkbox-material {
    .check {
      background-color: $color;
    }
  }

  .radio input[type=radio]:checked~.check {
    background-color: $color;
  }

  .radio input[type=radio]:checked~.circle {
    border-color: $color;
  }
}

// Opacity
@mixin opacity($opacity) {
  opacity: $opacity;
  // IE8 filter
  $opacity-ie: ($opacity * 100);
  filter: #{alpha(opacity=$opacity-ie)};
}

@mixin black-filter($opacity) {
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  position: absolute;
  background-color: rgba(17, 17, 17, $opacity);
  display: block;
  content: "";
  z-index: 1;
}

@mixin headings() {

  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    @content;
  }
}

// 14sp font
%std-font {
  font-size: 13px;
}

@mixin popover-color($color, $text-color) {
  background-color: $color;

  .popover-body {
    color: $text-color;
  }


  &.bs-popover-right .arrow:after {
    border-right-color: $color;
  }

  &.bs-popover-top .arrow:after {
    border-top-color: $color;
  }

  &.bs-popover-bottom .arrow:after {
    border-bottom-color: $color;
  }

  &.bs-popover-left .arrow:after {
    border-left-color: $color;
  }

  .popover-header {
    color: $text-color;
    opacity: .6;
  }
}
